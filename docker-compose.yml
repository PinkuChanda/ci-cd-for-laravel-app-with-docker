networks:
  laravel-app-network:
    driver: bridge

services:
  laravel-app:
    build:
      context: ./
      dockerfile: Dockerfile
    image: pinkuchanda/laravel-app-image:v1.0.0 
    container_name: laravel-app-container
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - laravel-app-network
    depends_on: 
      db:
        condition: service_healthy  # Wait for the MySQL container to be healthy
    environment:
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: laravel-app-db-container
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}

  db:
    image: mysql:8.0
    container_name: laravel-app-db-container
    restart: unless-stopped
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - laravel-app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: laravel-app-nginx-container
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - laravel-app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: laravel-app-db-container
      MYSQL_ROOT_PASSWORD: password
    ports:
      - 8081:80
    networks:
      - laravel-app-network


volumes:
  db-data: